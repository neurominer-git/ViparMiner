use strict;
use Fcntl;             # for sysopen
use DBI;
use CGI;
use CGI::Carp qw(fatalsToBrowser);
use CGI::Session;
use CGI::Cookie;
use IO::Handle;
use DateTime;
use AppConfig;
use IO::Socket::INET;
use strict;
use DBI;
use CGI;
use CGI::Carp qw(fatalsToBrowser);
use CGI::Session;
use CGI::Cookie;
use Data::Dumper;
use AppConfig;
use IO::Socket::INET;
use strict;
use CGI;
use CGI::Carp qw(fatalsToBrowser);
use CGI::Session;
use strict;
use PDF::Create;
use DBI;
use CGI;
use CGI::Session;
use CGI::Carp qw(fatalsToBrowser);
use AppConfig;
use strict;
use DBI;
use CGI;
use CGI::Carp qw(fatalsToBrowser);
use CGI::Session;
use CGI::Cookie;
use File::DirList;
use AppConfig;
use strict;
use CGI;
use CGI::Carp qw(fatalsToBrowser);
use CGI::Session;
use DBI;
use AppConfig;
use IO::Socket::INET;
use strict;
use DBI;
use CGI;
use CGI::Carp qw(fatalsToBrowser);
use CGI::Session;
use CGI::Cookie;
use strict;
use DBI;
use CGI;
use CGI::Carp qw(fatalsToBrowser);
use CGI::Session;
use CGI::Cookie;
use AppConfig;
use IO::Socket::INET;
use strict;
use DBI;
use CGI;
use CGI::Carp qw(fatalsToBrowser);
use CGI::Session;
use CGI::Cookie;
use Locale::Country;
use Data::Dumper;
use Scalar::Util qw(looks_like_number);
use AppConfig;
use IO::Socket::INET;
use strict;
use DBI;
use CGI;
use CGI::Carp qw(fatalsToBrowser);
use CGI::Session;
use CGI::Cookie;
use Data::Dumper;
use AppConfig;
use IO::Socket::INET;
use strict;
use DBI;
use CGI;
use CGI::Carp qw(fatalsToBrowser);
use CGI::Session;
use CGI::Cookie;
use Data::Dumper;
use DateTime::TimeZone;
use Crypt::GeneratePassword qw(word chars);
use AppConfig;
use IO::Socket::INET;
use strict;
use DBI;
use CGI;
use CGI::Carp qw(fatalsToBrowser);
use CGI::Session;
use CGI::Cookie;
use Data::Dumper;
use Scalar::Util qw(looks_like_number);
use AppConfig;
use IO::Socket::INET;
use strict;
use DBI;
use CGI;
use CGI::Carp qw(fatalsToBrowser);
use CGI::Session;
use CGI::Cookie;
use File::DirList;
use Data::Dumper;
use File::stat;
use Time::localtime;
use DateTime;
use AppConfig;
use IO::Socket::INET;
use threads;
use threads::shared;
use AppConfig;
use strict;
use warnings;
use Proc::Daemon;
use Fcntl qw/ :flock /;  # for exclusive locking of log files
use Fcntl qw(O_WRONLY);  # 
use Log::Dispatch;
use Log::Dispatch::File; 
use Log::Dispatch::FileShared; #for shared flocking
use Date::Format;
use Log::Dispatch::File::Rolling; #for shared flocking
use Log::Dispatch::FileRotate;
use MIME::Lite;
use POSIX qw(getpid);
use DBI;
use IO::Socket::INET;
use DateTime;
use Misc::Stopwatch;
